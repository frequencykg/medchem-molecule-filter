name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Linting and Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,pandas]"
    
    - name: Check code formatting with Black
      run: |
        black --check medchem_filter/ tests/ --line-length 100
    
    - name: Lint with flake8
      run: |
        flake8 medchem_filter/ tests/ --max-line-length 100 --extend-ignore E203,W503,E712 --count --statistics
    
    - name: Check imports with isort
      run: |
        pip install isort
        isort --check-only medchem_filter/ tests/ --profile black

  test:
    name: Test Python ${{ matrix.python-version }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,pandas]"
    
    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=medchem_filter --cov-report=xml --cov-report=html --cov-report=term-missing
    
    - name: Check test coverage threshold
      run: |
        coverage report --fail-under=85
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        flags: unittests
        name: codecov-umbrella
    
    - name: Upload coverage artifacts
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
